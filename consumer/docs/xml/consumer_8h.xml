<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="consumer_8h" kind="file" language="C++">
    <compoundname>consumer.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includes local="no">pact_mock_server_ffi.h</includes>
    <includes local="no">nlohmann/json.hpp</includes>
    <includes local="no">filesystem</includes>
    <includes local="no">optional</includes>
    <includes refid="matchers_8h" local="yes">matchers.h</includes>
    <includedby refid="body_8cpp" local="yes">src/body.cpp</includedby>
    <includedby refid="consumer_8cpp" local="yes">src/consumer.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>filesystem</label>
      </node>
      <node id="11">
        <label>boost/throw_exception.hpp</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="5">
        <label>pact_mock_server_ffi.h</label>
      </node>
      <node id="8">
        <label>optional</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="1">
        <label>include/consumer.h</label>
        <link refid="consumer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="9">
        <label>matchers.h</label>
        <link refid="matchers_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>unordered_map</label>
      </node>
      <node id="6">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/consumer.cpp</label>
        <link refid="consumer_8cpp"/>
      </node>
      <node id="2">
        <label>src/body.cpp</label>
        <link refid="body_8cpp"/>
      </node>
      <node id="1">
        <label>include/consumer.h</label>
        <link refid="consumer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classpact__consumer_1_1PactJsonBuilder" prot="public">pact_consumer::PactJsonBuilder</innerclass>
    <innerclass refid="classpact__consumer_1_1MockServerHandle" prot="public">pact_consumer::MockServerHandle</innerclass>
    <innerclass refid="classpact__consumer_1_1PactTestResult" prot="public">pact_consumer::PactTestResult</innerclass>
    <innerclass refid="classpact__consumer_1_1Pact" prot="public">pact_consumer::Pact</innerclass>
    <innerclass refid="classpact__consumer_1_1Interaction" prot="public">pact_consumer::Interaction</innerclass>
    <innernamespace refid="namespacepact__consumer">pact_consumer</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="consumer_8h_1ab701e3ac61a85b337ec5c1abaad6742d" prot="public" static="no">
        <type>nlohmann::json</type>
        <definition>using json =  nlohmann::json</definition>
        <argsstring></argsstring>
        <name>json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/consumer.h" line="12" column="1" bodyfile="include/consumer.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pact_mock_server_ffi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nlohmann/json.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matchers_8h" kindref="compound">matchers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="consumer_8h_1ab701e3ac61a85b337ec5c1abaad6742d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="consumer_8h_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>=<sp/><ref refid="consumer_8h_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">nlohmann::json</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepact__consumer" kindref="compound">pact_consumer</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacepact__consumer_1aaa6b9d5d2099c6ad833338cb2c1d4b11" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Interaction;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classpact__consumer_1_1PactJsonBuilder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1aa805a10ce64aa7a9fc7f0d3b3dcbe697" kindref="member">PactJsonBuilder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>*<sp/>parent);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a2636f4008e8c8a66adaf61ff9e858571" kindref="member">eachLike</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>examples,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(<ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>*));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a2636f4008e8c8a66adaf61ff9e858571" kindref="member">eachLike</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(<ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>*));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a29dac043b1bcb5e4a6a61021ea26cebc" kindref="member">atLeastOneLike</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>examples,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(<ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>*));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a29dac043b1bcb5e4a6a61021ea26cebc" kindref="member">atLeastOneLike</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(<ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>*));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a1c2313cac83d46a0eae974638e5c41c7" kindref="member">integer</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>example);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a1c2313cac83d46a0eae974638e5c41c7" kindref="member">integer</ref>(std::string<sp/>name);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a09d0204658f06b97fbfcb35542cfef1d" kindref="member">decimal</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>example);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a09d0204658f06b97fbfcb35542cfef1d" kindref="member">decimal</ref>(std::string<sp/>name);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a8a129fb5eccbf58e79d04a6e2f4eb425" kindref="member">number</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>example);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a8a129fb5eccbf58e79d04a6e2f4eb425" kindref="member">number</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>example);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a8a129fb5eccbf58e79d04a6e2f4eb425" kindref="member">number</ref>(std::string<sp/>name);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a64cd45052d249fac2df28f4e25ef9109" kindref="member">string</ref>(std::string<sp/>name,<sp/>std::string<sp/>example);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a64cd45052d249fac2df28f4e25ef9109" kindref="member">string</ref>(std::string<sp/>name);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a0465bbc9df6c990ed353d21ba83a58df" kindref="member">regex</ref>(std::string<sp/>name,<sp/>std::string<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a0465bbc9df6c990ed353d21ba83a58df" kindref="member">regex</ref>,<sp/>std::string<sp/>example);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a0465bbc9df6c990ed353d21ba83a58df" kindref="member">regex</ref>(std::string<sp/>name,<sp/>std::string<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a0465bbc9df6c990ed353d21ba83a58df" kindref="member">regex</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a687934cbab5262ff82360fd92c44fd8f" kindref="member">datetime</ref>(std::string<sp/>name,<sp/>std::string<sp/>format,<sp/>std::string<sp/>example);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a687934cbab5262ff82360fd92c44fd8f" kindref="member">datetime</ref>(std::string<sp/>name,<sp/>std::string<sp/>format);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>&amp;<sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1afda7b8c27b11afb4c732c1544bc81030" kindref="member">boolean</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classpact__consumer_1_1PactJsonBuilder_1a7bbc3c584b6236d0cfe87f8cd5ea7ad7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="consumer_8h_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder_1a7bbc3c584b6236d0cfe87f8cd5ea7ad7" kindref="member">get_json</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>*<sp/>parent;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="consumer_8h_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>obj;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classpact__consumer_1_1MockServerHandle" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpact__consumer_1_1MockServerHandle" kindref="compound">MockServerHandle</ref><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1MockServerHandle_1a8ec5a62b26a7551101312afd3ea542a4" kindref="member">MockServerHandle</ref>(pact_mock_server_ffi::PactHandle);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1MockServerHandle_1a515457a59d2e3a74e22ec558a8e5a490" kindref="member">~MockServerHandle</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1MockServerHandle_1a5956a6aa4afb3cb782dae4ed58f7e5ad" kindref="member">started_ok</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classpact__consumer_1_1MockServerHandle_1a7b9177aab903fca361cac6be60f2a7cc" kindref="member">get_url</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="classpact__consumer_1_1MockServerHandle_1ad3109a5b065ceac4e83e901c05625562" kindref="member">get_port</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>port;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68c" kindref="member">TestResultState</ref><sp/>{<sp/></highlight></codeline>
<codeline lineno="197" refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca59d67210ddbad0d51681661dd9c240be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca59d67210ddbad0d51681661dd9c240be" kindref="member">Mismatches</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(1u<sp/>&lt;&lt;<sp/>0),</highlight></codeline>
<codeline lineno="198" refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68cac32b44b8a1a75d9d00bcfb1e177684fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68cac32b44b8a1a75d9d00bcfb1e177684fb" kindref="member">UserCodeFailed</ref><sp/><sp/><sp/><sp/>=<sp/>(1u<sp/>&lt;&lt;<sp/>1),</highlight></codeline>
<codeline lineno="199" refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca2af45b15140f31c228c6fee2cf6317c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca2af45b15140f31c228c6fee2cf6317c2" kindref="member">PactFileError</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(1u<sp/>&lt;&lt;<sp/>2),</highlight></codeline>
<codeline lineno="200" refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca8ae50beaa972c0fda0fef93885f811ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68ca8ae50beaa972c0fda0fef93885f811ea" kindref="member">MockServerFailed</ref><sp/><sp/>=<sp/>(1u<sp/>&lt;&lt;<sp/>3)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classpact__consumer_1_1PactTestResult" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpact__consumer_1_1PactTestResult" kindref="compound">PactTestResult</ref><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactTestResult_1ad864d8a498509ff5b4bfa25eaf490a6c" kindref="member">PactTestResult</ref>();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactTestResult_1a17c49c0a25f96a69b1e37dbdcc0b88ad" kindref="member">add_state</ref>(<ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68c" kindref="member">TestResultState</ref><sp/>state);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactTestResult_1a17c49c0a25f96a69b1e37dbdcc0b88ad" kindref="member">add_state</ref>(<ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68c" kindref="member">TestResultState</ref><sp/>state,<sp/>std::string<sp/>message);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactTestResult_1a17c49c0a25f96a69b1e37dbdcc0b88ad" kindref="member">add_state</ref>(<ref refid="namespacepact__consumer_1a52ee54250f0c10cc1cb80909bef7b68c" kindref="member">TestResultState</ref><sp/>state,<sp/>std::string<sp/>message,<sp/>std::string<sp/>ex);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactTestResult_1af52c0d3521914b0398d0bc0d54cbd1a9" kindref="member">is_ok</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1PactTestResult_1ad559f0f824c26a6fd5f6c6b1fa89932a" kindref="member">display_errors</ref>();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>messages;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;std::string&gt;<sp/>ex;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classpact__consumer_1_1Pact" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpact__consumer_1_1Pact" kindref="compound">Pact</ref><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Pact_1a907de956f18c074634ceba0980fa8630" kindref="member">Pact</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>consumer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>provider);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Pact_1a630248129b4a610fd15d94d08c6fb6f5" kindref="member">given</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>provider_state)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Pact_1a630248129b4a610fd15d94d08c6fb6f5" kindref="member">given</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>provider_state,<sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;<sp/>parameters)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Pact_1a05713ce4758ee154989b327c686dc18d" kindref="member">uponReceiving</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>description)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1PactTestResult" kindref="compound">PactTestResult</ref><sp/><ref refid="classpact__consumer_1_1Pact_1a3428f3cbc0ad30377867377efe84fef2" kindref="member">run_test</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>(*callback)(<ref refid="classpact__consumer_1_1MockServerHandle" kindref="compound">MockServerHandle</ref>*))<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="classpact__consumer_1_1Pact_1a43a945f3d3b363c9c251f5954e76b915" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pact_mock_server_ffi::PactHandle<sp/><ref refid="classpact__consumer_1_1Pact_1a43a945f3d3b363c9c251f5954e76b915" kindref="member">pact</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classpact__consumer_1_1Pact_1a2d71145b2d9394a13b2ec104b031cdd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classpact__consumer_1_1Pact_1a2d71145b2d9394a13b2ec104b031cdd2" kindref="member">pact_directory</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>consumer;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>provider;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="classpact__consumer_1_1Interaction" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction_1adfdeefe452d43765c863764c8010dacb" kindref="member">Interaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1Pact" kindref="compound">Pact</ref>*<sp/>parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*description);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1ab317881a13f364c21ba4d773103f6fa9" kindref="member">given</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>provider_state)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1ab317881a13f364c21ba4d773103f6fa9" kindref="member">given</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>provider_state,<sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;<sp/>parameters)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a4d6a8acadad3b486a3996a5fd4819be2" kindref="member">uponReceiving</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>description)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1ac29f5f3c8c0dfe941e00bee09334b341" kindref="member">withRequest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>method,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1ac73dc56507068dcf186dc76ebb848b30" kindref="member">withQuery</ref>(std::unordered_map&lt;std::string,<sp/>std::vector&lt;std::string&gt;&gt;<sp/>query)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a8d4c0519d5e17bc14e4b062fd4361c71" kindref="member">withHeaders</ref>(std::unordered_map&lt;std::string,<sp/>std::vector&lt;std::string&gt;&gt;<sp/>headers)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1ac7cbcf570140343c007522be4091afb7" kindref="member">withJsonBody</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(<ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>*))<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1ac7cbcf570140343c007522be4091afb7" kindref="member">withJsonBody</ref>(<ref refid="classpact__consumer_1_1matchers_1_1IMatcher_1a36aa47dbb9f50f5d8432977bc7ae9a5b" kindref="member">pact_consumer::matchers::IMatcher::Ptr</ref><sp/>body)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a32d4f4973538d33d5abe1889d0c8365f" kindref="member">withBinaryFile</ref>(std::string<sp/>content_type,<sp/>std::filesystem::path<sp/>example_file)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1adb4b399b152b384682d17436ac648d45" kindref="member">willRespondWith</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>status)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a9d0915c5ab54bff6e33a9ca8e9464baa" kindref="member">withResponseHeaders</ref>(std::unordered_map&lt;std::string,<sp/>std::vector&lt;std::string&gt;&gt;<sp/>headers)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1afa30f026c1c2cb12d366ea23f27ff255" kindref="member">withResponseJsonBody</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(<ref refid="classpact__consumer_1_1PactJsonBuilder" kindref="compound">PactJsonBuilder</ref>*))<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1afa30f026c1c2cb12d366ea23f27ff255" kindref="member">withResponseJsonBody</ref>(<ref refid="classpact__consumer_1_1matchers_1_1IMatcher_1a36aa47dbb9f50f5d8432977bc7ae9a5b" kindref="member">pact_consumer::matchers::IMatcher::Ptr</ref><sp/>body)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpact__consumer_1_1Interaction" kindref="compound">Interaction</ref><sp/><ref refid="classpact__consumer_1_1Interaction_1a3489e6576ddb7e22fd6dbc45d35fefd8" kindref="member">withResponseBinaryFile</ref>(std::string<sp/>content_type,<sp/>std::filesystem::path<sp/>example_file)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="classpact__consumer_1_1Interaction_1a89bc107360700c1ba7741061910d4485" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pact_mock_server_ffi::InteractionHandle<sp/><ref refid="classpact__consumer_1_1Interaction_1a89bc107360700c1ba7741061910d4485" kindref="member">interaction</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>description;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpact__consumer_1_1Pact" kindref="compound">Pact</ref>*<sp/>pact;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/consumer.h"/>
  </compounddef>
</doxygen>
